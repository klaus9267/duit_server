version: "3.8"

services:
  app:
    image: ${IMAGE_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG:-latest}
    container_name: duit-server-prod
    profiles: ["app", "full"]
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - duit-network-prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    image: mysql:8.0
    container_name: duit-mysql-prod
    profiles: ["infra", "full"]
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "127.0.0.1:3306:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
    restart: unless-stopped
    networks:
      - duit-network-prod
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DB_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: duit-redis-prod
    profiles: ["infra", "full"]
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data_prod:/data
    restart: unless-stopped
    networks:
      - duit-network-prod
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  prometheus:
    image: prom/prometheus:latest
    container_name: duit-prometheus-prod
    profiles: ["monitoring", "full"]
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data_prod:/prometheus
    restart: unless-stopped
    networks:
      - duit-network-prod

  grafana:
    image: grafana/grafana:latest
    container_name: duit-grafana-prod
    profiles: ["monitoring", "full"]
    ports:
      - "3000:3000"
    volumes:
      - grafana_data_prod:/var/lib/grafana
      - ./monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    restart: unless-stopped
    networks:
      - duit-network-prod
    depends_on:
      - prometheus
      - loki

  loki:
    image: grafana/loki:latest
    container_name: duit-loki-prod
    profiles: ["monitoring", "full"]
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki.yml:/etc/loki/local-config.yaml
      - loki_data_prod:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - duit-network-prod

  promtail:
    image: grafana/promtail:latest
    container_name: duit-promtail-prod
    profiles: ["monitoring", "full"]
    volumes:
      - ./monitoring/promtail.yml:/etc/promtail/config.yml
      # Linux 서버용 볼륨 매핑
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    restart: unless-stopped
    networks:
      - duit-network-prod

  db-backup:
    image: fradelg/mysql-cron-backup
    container_name: duit-mysql-backup
    profiles: ["infra", "full"]
    depends_on:
      - db
    environment:
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASS: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      CRON_TIME: "0 4 * * *"
      MAX_BACKUPS: 30  # 30개 보관
      INIT_BACKUP: 1  # 시작 시 즉시 백업
    volumes:
      - /home/vagom/backups/mysql:/backup
    networks:
      - duit-network-prod
    restart: unless-stopped

volumes:
  mysql_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  prometheus_data_prod:
    driver: local
  grafana_data_prod:
    driver: local
  loki_data_prod:
    driver: local

networks:
  duit-network-prod:
    driver: bridge
